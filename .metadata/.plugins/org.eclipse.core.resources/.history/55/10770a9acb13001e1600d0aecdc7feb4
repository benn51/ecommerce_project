package com.onlinemarket.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;

import com.onlinemarket.dao.DeleteShoesDao.ShoesResultSetExtractor;
import com.onlinemarket.entity.Cloths;
import com.onlinemarket.entity.Shoes;

public class UpdateClothDao implements UpdateClothDaoInterface {

	
	@Autowired 
	NamedParameterJdbcTemplate jdbcTemplate;
	
	@Override
	public Cloths updateCloth(String clothId, int clothPrice) {
		
	SqlParams params= new SqlParams();
		
		//@formmater :off
		
		String sql= ""
				+ "UPDATE TABLE cloths "
				+ " SET  cloth_price = :cloth_price  "
				+  " WHERE cloth_Id = :cloth:Id " ;
		
		//@formmater :ofn
		
		
		params.sql= sql;
		params.source.addValue("cloth_Id", clothId);
		params.source.addValue("cloth_price", clothPrice);
		
		 jdbcTemplate.update(params.sql, params.source);
		
		
		return null;
	}
	
	Cloths fetchCLoth(String clothId, int clothPrice) {
		
		String sql= " "
				+ "SELECT * FROM cloths "
				+ " WHERE cloth_id = :cloth_id ";
			
		  Map<String, Object> params = new HashMap<>();
		  
		 
		    params.put("shoe_id", shoeId);
		
	      return jdbcTemplate.query(sql, params, new ClothResultSetExtractor());

	}
	
	
	
	
	
	class ClothResultSetExtractor implements ResultSetExtractor<Shoes> {
		   @Override
		   public Shoes extractData(ResultSet rs) throws SQLException {
		     rs.next();

		     // @formatter:off
		     return Shoes.builder()
		         .shoeId(rs.getString("shoe_id"))
		         .shoeColor(rs.getString("shoe_color"))
		         .shoeSize(rs.getInt("shoe_size"))
		         .catagory(rs.getString("catagory"))
		         .price(rs.getInt("price"))
		         .build();
		     // @formatter:on
		   }
		 }
	
	
	
	
	class SqlParams{
		String sql;
		MapSqlParameterSource source = new MapSqlParameterSource();
	      

	    }

	
}
