package com.onlinemarket.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Component;

import com.onlinemarket.entity.Shoes;

@Component
public class DeleteShoesDao implements DeleteShoesDaoInterface {

	@Autowired
   private 	NamedParameterJdbcTemplate jdbcTemplate;
	
	@Override
	public Shoes deleteShoe(String shoeId) {
		
		SqlParams params = new SqlParams();
		
		
		String sql= " "
				+ "DELETE FROM shoes "
				+ " WHERE shoe_id = :shoe:id ";
		
		params.sql= sql;
		params.source.addValue( "shoe_id", shoeId) ;
				
		jdbcTemplate.update(params.sql, params.source);
		
		
		
		return null;
	}
	
	private Shoes fetchShoes(String shoeId) {
		
		SqlParams params = new SqlParams();
		
		String sql= " "
				+ "SELECT * FROM shoes "
				+ " WHERE shoe_id = :shoe:id ";
		
		params.sql= sql;
		params.source.addValue( "shoe_id", shoeId) ;
				
		
		
	      return Optional.ofNullable(jdbcTemplate.query(sql, params, new ShoesResultSetExtractor()));
		
	}
	
	
	
	 class ShoesResultSetExtractor implements ResultSetExtractor<Shoes> {
	   @Override
	   public Color extractData(ResultSet rs) throws SQLException {
	     rs.next();

	     // @formatter:off
	     return Color.builder()
	         .color(rs.getString("color"))
	         .colorId(rs.getString("color_id"))
	         .colorPK(rs.getLong("color_pk"))
	         .isExterior(rs.getBoolean("is_exterior"))
	         .price(rs.getBigDecimal("price"))
	         .build();
	     // @formatter:on
	   }
	 }

	
	
	class SqlParams{
		String sql;
		MapSqlParameterSource source = new MapSqlParameterSource();
	      

	    }

}
